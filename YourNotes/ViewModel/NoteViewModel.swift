//
//  NoteViewModel.swift
//  YourNotes
//
//  Created by alexander on 7.04.25.
//

import SwiftData
import Foundation

class NoteViewModel: ObservableObject {
    @Published var note: Note?
    @Published var allNotes: [Note] = []

    private let noteService: NoteServiceProtocol

    var service: NoteServiceProtocol { noteService }

    init(noteService: NoteServiceProtocol) {
        self.noteService = noteService
        loadAllNotes()
    }

    // üîç –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏ –ø–æ `noteID`
    func loadNote(by id: String) {
        self.note = noteService.fetchNote(by: id)
    }

    // üîç –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
    func loadAllNotes() {
        self.allNotes = noteService.fetchAllNotes()
    }

    // üíæ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏
    func createNote(title: String, subTitle: String, imageData: Data? = nil, isCompleted: Bool = false) {
        let newNote = Note(noteImage: imageData, title: title, subTitle: subTitle, isCompleted: isCompleted)
        noteService.createNote(newNote)
        loadAllNotes()
        print("‚úÖ –ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∞.")
    }

    // ‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–∏
    func updateNote(title: String, subTitle: String, imageData: Data? = nil, isCompleted: Bool = false) {
        guard let note = note else { return }

        note.title = title
        note.subTitle = subTitle
        note.noteImage = imageData
        note.isCompleted = isCompleted

        noteService.updateNote(by: note.noteID, with: note)
        
        // üî• –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∑–∞–º–µ—Ç–∫–∏
        loadNote(by: note.noteID)
        loadAllNotes()
        print("‚úÖ –ó–∞–º–µ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
    }

    // üóë –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
    func deleteNote(by id: String) {
        noteService.deleteNote(by: id)
        loadAllNotes()
        print("‚úÖ –ó–∞–º–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞.")
    }
}
